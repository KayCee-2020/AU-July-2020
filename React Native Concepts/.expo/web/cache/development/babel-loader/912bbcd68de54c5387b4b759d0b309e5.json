{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\blin\\\\Desktop\\\\react_assignment\\\\todo\\\\src\\\\components\\\\WorkList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { add } from \"react-native-reanimated\";\nimport ShowList from \"./ShowList\";\n\nvar WorkList = function WorkList(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      todoList = _useState2[0],\n      settodoList = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      display = _useState4[0],\n      setDisplay = _useState4[1];\n\n  useEffect(function () {\n    checkTodo();\n  }, []);\n\n  var checkTodo = function checkTodo() {\n    var list;\n    return _regeneratorRuntime.async(function checkTodo$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"todoList\"));\n\n          case 2:\n            list = _context.sent;\n\n            if (list) {\n              setDisplay(list);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var createTwoButtonAlert = function createTwoButtonAlert() {\n    return Alert.alert('Alert Title', 'My Alert Msg', [{\n      text: 'Ask me later',\n      onPress: function onPress() {\n        return console.log('Ask me later pressed');\n      }\n    }, {\n      text: 'Cancel',\n      onPress: function onPress() {\n        return console.log('Cancel Pressed');\n      },\n      style: 'cancel'\n    }, {\n      text: 'OK',\n      onPress: function onPress() {\n        return console.log('OK Pressed');\n      }\n    }], {\n      cancelable: false\n    });\n  };\n\n  var addTodo = function addTodo() {\n    var myArray, obj, arr;\n    return _regeneratorRuntime.async(function addTodo$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('todoList'));\n\n          case 3:\n            myArray = _context2.sent;\n            console.log(myArray);\n\n            if (!(myArray == null)) {\n              _context2.next = 14;\n              break;\n            }\n\n            obj = [];\n            obj.push(todoList);\n            _context2.next = 10;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('todoList', JSON.stringify(obj)));\n\n          case 10:\n            _context2.next = 12;\n            return _regeneratorRuntime.awrap(useEffect(function () {\n              checkTodo();\n            }, []));\n\n          case 12:\n            _context2.next = 20;\n            break;\n\n          case 14:\n            arr = JSON.parse(myArray);\n            arr.push(todoList);\n            _context2.next = 18;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('todoList', JSON.stringify(arr)));\n\n          case 18:\n            _context2.next = 20;\n            return _regeneratorRuntime.awrap(useEffect(function () {\n              checkTodo();\n            }, []));\n\n          case 20:\n            _context2.next = 24;\n            break;\n\n          case 22:\n            _context2.prev = 22;\n            _context2.t0 = _context2[\"catch\"](0);\n\n          case 24:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 22]], Promise);\n  };\n\n  var deleteTodo = function deleteTodo() {\n    var myArray, newArr, index;\n    return _regeneratorRuntime.async(function deleteTodo$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log(\"hello\");\n            _context3.prev = 1;\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('todoList'));\n\n          case 4:\n            myArray = _context3.sent;\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(JSON.parse(myArray));\n\n          case 7:\n            newArr = _context3.sent;\n            console.log(newArr);\n            _context3.next = 11;\n            return _regeneratorRuntime.awrap(newArr.indexOf(todoList));\n\n          case 11:\n            index = _context3.sent;\n\n            if (!(index == -1)) {\n              _context3.next = 14;\n              break;\n            }\n\n            return _context3.abrupt(\"return\");\n\n          case 14:\n            _context3.next = 16;\n            return _regeneratorRuntime.awrap(newArr.splice(index, 1));\n\n          case 16:\n            _context3.next = 18;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('todoList', JSON.stringify(newArr)));\n\n          case 18:\n            _context3.next = 20;\n            return _regeneratorRuntime.awrap(useEffect(function () {\n              checkTodo();\n            }, []));\n\n          case 20:\n            _context3.next = 25;\n            break;\n\n          case 22:\n            _context3.prev = 22;\n            _context3.t0 = _context3[\"catch\"](1);\n            console.log(_context3.t0);\n\n          case 25:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[1, 22]], Promise);\n  };\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: Styles.textInputStyle,\n    onChangeText: function onChangeText(todo) {\n      return settodoList(todo);\n    },\n    placeholder: \"Enter todolist...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Set Todo\",\n    onPress: function onPress() {\n      addTodo();\n      createTwoButtonAlert();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, display), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Reload to see changes in todos\"), React.createElement(TextInput, {\n    style: Styles.textInputStyle,\n    onChangeText: function onChangeText(todo) {\n      return settodoList(todo);\n    },\n    placeholder: \"Enter todo to delete.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Delete Todo\",\n    onPress: function onPress() {\n      deleteTodo();\n      createTwoButtonAlert();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar Styles = StyleSheet.create({\n  title: {\n    fontSize: 16,\n    color: \"white\",\n    fontWeight: \"700\",\n    padding: 5\n  },\n  source: {\n    fontSize: 16,\n    color: \"white\",\n    fontWeight: \"700\",\n    padding: 5,\n    alignSelf: \"flex-end\"\n  },\n  background: {\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"space-between\"\n  },\n  container: {\n    width: \"95%\",\n    height: 150,\n    marginLeft: \"2.5%\",\n    marginRight: \"2.5%\",\n    marginVertical: 5\n  },\n  textInputStyle: {\n    borderColor: \"black\",\n    borderWidth: 1,\n    borderRadius: 5,\n    fontSize: 20,\n    padding: 5,\n    width: \"60%\",\n    marginBottom: 20\n  }\n});\nexport default WorkList;","map":{"version":3,"sources":["C:/Users/blin/Desktop/react_assignment/todo/src/components/WorkList.js"],"names":["React","useState","useEffect","add","ShowList","WorkList","navigation","todoList","settodoList","display","setDisplay","checkTodo","AsyncStorage","getItem","list","createTwoButtonAlert","Alert","alert","text","onPress","console","log","style","cancelable","addTodo","myArray","obj","push","setItem","JSON","stringify","arr","parse","deleteTodo","newArr","indexOf","index","splice","Styles","textInputStyle","todo","StyleSheet","create","title","fontSize","color","fontWeight","padding","source","alignSelf","background","width","height","justifyContent","container","marginLeft","marginRight","marginVertical","borderColor","borderWidth","borderRadius","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Text, TextInput, View, StyleSheet, Button, AsyncStorage, ImageBackground, TouchableOpacity,Alert } from \"react-native\";\r\nimport { add } from \"react-native-reanimated\";\r\nimport ShowList from './ShowList';\r\n\r\n\r\n\r\nconst WorkList= ({navigation}) =>{\r\n    const [todoList, settodoList] = useState(\"\");\r\n    const [display,setDisplay] = useState(\"\");\r\n  \r\n    useEffect(() => {\r\n        checkTodo()\r\n    }, [])\r\n\r\n    const checkTodo = async () => {\r\n        const list = await AsyncStorage.getItem(\"todoList\");\r\n        if (list) {\r\n            setDisplay(list);\r\n        }\r\n        \r\n    }\r\n   \r\n\r\n        const createTwoButtonAlert = () =>\r\n        Alert.alert(\r\n            'Alert Title',\r\n            'My Alert Msg',\r\n            [\r\n              {\r\n                text: 'Ask me later',\r\n                onPress: () => console.log('Ask me later pressed')\r\n              },\r\n              {\r\n                text: 'Cancel',\r\n                onPress: () => console.log('Cancel Pressed'),\r\n                style: 'cancel'\r\n              },\r\n              { text: 'OK', onPress: () => console.log('OK Pressed') }\r\n            ],\r\n            { cancelable: false }\r\n          );\r\n\r\n        // const createTwoButtonAlert1 = () =>\r\n        //     Alert.alert(\r\n        //     \"Deleted Todo\",\r\n           \r\n        //     [\r\n        //         {\r\n        //         text: \"Cancel\",\r\n        //         onPress: () => console.log(\"Cancel Pressed\"),\r\n        //         style: \"cancel\"\r\n        //         },\r\n        //         { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n        //     ],\r\n        //     { cancelable: false }\r\n        // );\r\n    const addTodo = async () => {\r\n        \r\n        \r\n       //await AsyncStorage.clear();\r\n        try {\r\n            const myArray = await AsyncStorage.getItem('todoList');\r\n            console.log(myArray);\r\n            if (myArray == null) {\r\n             \r\n              var obj = [];\r\n              obj.push(todoList);\r\n              await AsyncStorage.setItem('todoList', JSON.stringify(obj));\r\n              await useEffect(() => {\r\n                checkTodo()\r\n              }, [])\r\n             \r\n            }\r\n            else{\r\n                var arr = JSON.parse(myArray);\r\n                \r\n               arr.push(todoList);\r\n                await AsyncStorage.setItem('todoList', JSON.stringify(arr));\r\n                await useEffect(() => {\r\n                    checkTodo()\r\n                  }, [])\r\n                \r\n                  \r\n            }\r\n          } catch (error) {\r\n          }\r\n        }\r\n          \r\n          const deleteTodo = async () => {\r\n            console.log(\"hello\");\r\n        \r\n             try {\r\n                 const myArray = await AsyncStorage.getItem('todoList');\r\n                 var newArr = await JSON.parse(myArray);\r\n                 console.log(newArr);\r\n\r\n                 var index = await newArr.indexOf(todoList);\r\n                 if(index == -1){\r\n                     return;\r\n                 }\r\n                 await newArr.splice(index, 1);\r\n                 await AsyncStorage.setItem('todoList', JSON.stringify(newArr));\r\n                 await useEffect(() => {\r\n                    checkTodo()\r\n                  }, [])\r\n                 \r\n               } catch (error) {\r\n                 \r\n                 console.log(error);\r\n               }\r\n            }\r\n               \r\n\r\n\r\n    \r\n    return (\r\n        <View>\r\n            \r\n            <TextInput style={Styles.textInputStyle} onChangeText={(todo) => settodoList(todo)} placeholder=\"Enter todolist...\" />\r\n            <Button title=\"Set Todo\" onPress={\r\n                () => { addTodo(); createTwoButtonAlert(); }\r\n                }/>\r\n            <Text>{display}</Text>\r\n            <Text>Reload to see changes in todos</Text>\r\n            <TextInput style={Styles.textInputStyle} onChangeText={(todo) => settodoList(todo)} placeholder=\"Enter todo to delete.\" />\r\n            <Button title=\"Delete Todo\" onPress={\r\n                () => { deleteTodo(); createTwoButtonAlert();}\r\n                } /> \r\n           \r\n        </View>\r\n       \r\n\r\n    )  \r\n\r\n\r\n\r\n    \r\n}\r\n\r\nconst Styles = StyleSheet.create({\r\n    title: {\r\n        fontSize: 16,\r\n        color: \"white\",\r\n        fontWeight: \"700\",\r\n        padding: 5\r\n    },\r\n    source: {\r\n        fontSize: 16,\r\n        color: \"white\",\r\n        fontWeight: \"700\",\r\n        padding: 5,\r\n        alignSelf: \"flex-end\"\r\n    },\r\n    background: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    container: {\r\n        width: \"95%\",\r\n        height: 150,\r\n        marginLeft: \"2.5%\",\r\n        marginRight: \"2.5%\",\r\n        marginVertical: 5\r\n    },\r\n    textInputStyle: {\r\n        borderColor: \"black\",\r\n        borderWidth: 1,\r\n        borderRadius: 5,\r\n        fontSize: 20,\r\n        padding: 5,\r\n        width: \"60%\",\r\n        marginBottom: 20\r\n    }\r\n\r\n})\r\n\r\nexport default WorkList;"]},"metadata":{},"sourceType":"module"}